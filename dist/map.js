"use strict";function _classCallCheck(a,e){if(!(a instanceof e))throw new TypeError("Cannot call a class as a function")}var weapons=[{cssClass:"snowball",damage:5},{cssClass:"fish",damage:10},{cssClass:"smallStone",damage:15},{cssClass:"bigStone",damage:20}],pickableWeapons=weapons.filter(function(a){return 5<a.damage}),defaultWeapon=weapons.find(function(a){return"snowball"==a.cssClass}),allMapSquares=document.getElementsByClassName("mapSquare"),mapContainer=document.getElementById("map-container"),initialHealthStatus=100,dimmedSquareClass="dimmedSquare",Player=function a(e,t){var n=this;_classCallCheck(this,a),this.cssClass=e,this.statboxId=t,this.isActive=!1,this.position=null,this.healthPoints=initialHealthStatus,this.Weapon=defaultWeapon,this.positionArray=function(){var a=n.position.id.split("-");return a[0]=parseInt(a[0]),a[1]=parseInt(a[1]),a}},playerOne=new Player("playerOne","statboxOne"),playerTwo=new Player("playerTwo","statboxTwo"),activePlayer=function(){return 1==playerOne.isActive?playerOne:1==playerTwo.isActive?playerTwo:void 0};function randomPositionOnMap(){var a=Math.floor(Math.random()*allMapSquares.length);return allMapSquares[a]}function generateDimmedSquares(){for(var a=0;a<15;){var e=randomPositionOnMap();"mapSquare"===e.className&&(e.classList.add("dimmedSquare"),a++)}}function generatePlayersPosition(a){for(var e=0;e<1;){var t=randomPositionOnMap();"mapSquare"===t.className&&(t.classList.add(a.cssClass),e++),a.position=document.getElementsByClassName(a.cssClass)[0]}}function generateWeapons(){var a=!0,e=!1,t=void 0;try{for(var n,s=pickableWeapons[Symbol.iterator]();!(a=(n=s.next()).done);a=!0)for(var o=n.value,l=0;l<2;){var i=randomPositionOnMap();"mapSquare"===i.className&&(i.classList.add(o.cssClass),l++)}}catch(a){e=!0,t=a}finally{try{a||null==s.return||s.return()}finally{if(e)throw t}}}function drawMapGrid(a){for(var e=0;e<a;e++){var t=document.createElement("div");t.className="mapGridRow",mapGrid.appendChild(t);for(var n=0;n<a;n++){var s=document.createElement("div");s.className="mapSquare",s.id="".concat([e+1],"-").concat([n+1]),t.appendChild(s)}}generateDimmedSquares(),generatePlayersPosition(playerOne),playerOne.isActive=!0,checkAvailableSquares(playerOne),generatePlayersPosition(playerTwo),generateWeapons()}drawMapGrid(12),statboxFunction(playerOne),statboxFunction(playerTwo);var availableList=document.getElementsByClassName("availableSquare");function statboxFunction(a){var e=document.createElement("p"),t=document.createTextNode("Health: ".concat(a.healthPoints));e.appendChild(t),document.getElementById("".concat(a.statboxId)).appendChild(e);var n=document.createElement("p"),s=document.createTextNode("Weapon: ".concat(a.Weapon.cssClass));n.appendChild(s),document.getElementById("".concat(a.statboxId)).appendChild(n);var o=document.createElement("p"),l=document.createTextNode("Damage: ".concat(a.Weapon.damage));o.appendChild(l),document.getElementById("".concat(a.statboxId)).appendChild(o);var i=document.createElement("p"),c=document.createTextNode("Position: ".concat(a.position.id));i.appendChild(c),document.getElementById("".concat(a.statboxId)).appendChild(i)}function checkAvailableSquares(a){var l=a.positionArray()[0],i=a.positionArray()[1];function e(a,e,t){for(var n=0;n<3;n++){l=a.positionArray()[e]+(n+1)*t;var s="".concat(l,"-").concat(i),o=document.getElementById("".concat(s));null==o||o.classList.contains("dimmedSquare")?n=3:o.classList.contains("playerOne")||o.classList.contains("playerTwo")?alert("Fight!"):o.classList.add("availableSquare")}l=a.positionArray()[0]}function t(a,e,t){for(var n=0;n<3;n++){i=a.positionArray()[e]+(n+1)*t;var s="".concat(l,"-").concat(i),o=document.getElementById("".concat(s));null==o?n=4:o.classList.contains("dimmedSquare")?n=4:o.classList.contains("playerOne")||o.classList.contains("playerTwo")?alert("Fight!"):o.classList.add("availableSquare")}}e(a,0,-1),e(a,0,1),t(a,1,-1),t(a,1,1)}function takePlayerAway(a){document.getElementById(a.position.id).classList.remove(a.cssClass)}function clearAccessible(){for(;availableList.length;)availableList[availableList.length-1].classList.remove("availableSquare")}function movePlayer(a){clearAccessible(),takePlayerAway(a);var t=document.getElementById(event.target.id);t.classList.add(a.cssClass),a.position=t,console.log('Moved player to mapSquare with id "'.concat(t.id,'"'));for(var e=function(e){t.classList.contains("".concat(weapons[e].cssClass))&&(console.log("grabbed ".concat(weapons[e].cssClass)),t.classList.add("".concat(a.Weapon.cssClass)),a.Weapon=weapons.find(function(a){return n=e,a.cssClass==weapons[e].cssClass}),t.classList.remove("".concat(weapons[e].cssClass)),e=weapons.length),n=e},n=0;n<weapons.length;n++)e(n);activePlayer()==playerOne?(playerOne.isActive=!1,playerTwo.isActive=!0):activePlayer()==playerTwo&&(playerTwo.isActive=!1,playerOne.isActive=!0),document.getElementById("".concat(a.statboxId)).innerHTML="",statboxFunction(a),checkAvailableSquares(activePlayer())}var body=document.querySelector("body");body.addEventListener("click",function(a){a.target.classList.contains("availableSquare")?movePlayer(activePlayer()):console.log("Clicked on a non accesible space")});